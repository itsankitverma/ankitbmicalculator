[{"C:\\Users\\avani\\OneDrive\\Desktop\\Project\\ankitbmicalculator\\src\\index.js":"1","C:\\Users\\avani\\OneDrive\\Desktop\\Project\\ankitbmicalculator\\src\\App.js":"2","C:\\Users\\avani\\OneDrive\\Desktop\\Project\\ankitbmicalculator\\src\\reportWebVitals.js":"3","C:\\Users\\avani\\OneDrive\\Desktop\\Project\\ankitbmicalculator\\src\\BMI\\Bmi.jsx":"4","C:\\Users\\avani\\OneDrive\\Desktop\\Project\\ankitbmicalculator\\src\\Footer.jsx":"5","C:\\Users\\avani\\OneDrive\\Desktop\\Project\\ankitbmicalculator\\src\\BMI\\Navbar.jsx":"6","C:\\Users\\avani\\OneDrive\\Desktop\\Project\\ankitbmicalculator\\src\\BMI\\Drawer.jsx":"7","C:\\Users\\avani\\OneDrive\\Desktop\\Project\\ankitbmicalculator\\src\\Weather\\Weather.jsx":"8"},{"size":500,"mtime":499162500000,"results":"9","hashOfConfig":"10"},{"size":963,"mtime":1610981539865,"results":"11","hashOfConfig":"10"},{"size":362,"mtime":499162500000,"results":"12","hashOfConfig":"10"},{"size":3312,"mtime":1610962152383,"results":"13","hashOfConfig":"10"},{"size":126,"mtime":1610893404191,"results":"14","hashOfConfig":"10"},{"size":1623,"mtime":1610906184888,"results":"15","hashOfConfig":"10"},{"size":1533,"mtime":1610905358407,"results":"16","hashOfConfig":"10"},{"size":3340,"mtime":1611286923311,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"1uwpel4",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"20"},"C:\\Users\\avani\\OneDrive\\Desktop\\Project\\ankitbmicalculator\\src\\index.js",[],["38","39"],"C:\\Users\\avani\\OneDrive\\Desktop\\Project\\ankitbmicalculator\\src\\App.js",[],"C:\\Users\\avani\\OneDrive\\Desktop\\Project\\ankitbmicalculator\\src\\reportWebVitals.js",[],"C:\\Users\\avani\\OneDrive\\Desktop\\Project\\ankitbmicalculator\\src\\BMI\\Bmi.jsx",[],["40","41"],"C:\\Users\\avani\\OneDrive\\Desktop\\Project\\ankitbmicalculator\\src\\Footer.jsx",[],["42","43"],"C:\\Users\\avani\\OneDrive\\Desktop\\Project\\ankitbmicalculator\\src\\BMI\\Navbar.jsx",[],"C:\\Users\\avani\\OneDrive\\Desktop\\Project\\ankitbmicalculator\\src\\BMI\\Drawer.jsx",[],"C:\\Users\\avani\\OneDrive\\Desktop\\Project\\ankitbmicalculator\\src\\Weather\\Weather.jsx",["44"],"import React, { useState } from \"react\";\r\nimport \"./weather.css\";\r\nimport NightsStayIcon from \"@material-ui/icons/NightsStay\";\r\nimport Footer from \"../Footer\";\r\nfunction Weather() {\r\n  const [weather, setweather] = useState(\"\");\r\n  const [temp, settemp] = useState(\"\");\r\n  const [celcius, setcelcius] = useState(\"\");\r\n  const [humidity, sethumidity] = useState(\"\");\r\n  const [pressure, setpressure] = useState(\"\");\r\n  const [maxtemp, setmaxtemp] = useState(\"\");\r\n  const [mintemp, setmintemp] = useState(\"\");\r\n  const [city, setcity] = useState(\"\");\r\n  const [country, setcountry] = useState(\"\");\r\n  const [main, setmain] = useState(\"\");\r\n\r\n  var today = new Date();\r\n  var time =\r\n    today.getHours() + \":\" + today.getMinutes() + \":\" + today.getSeconds();\r\n\r\n  function callweather() {\r\n    fetch(\r\n      `http://api.openweathermap.org/data/2.5/weather?q=${weather},&APPID=767a7cce68ed2b3098d41e24364ec56c`\r\n    )\r\n      .then((res) => res.json())\r\n      .then((result) => (\r\n        <>\r\n          {\r\n            (settemp(result.main.temp),\r\n            setcelcius(result.main.temp),\r\n            sethumidity(result.main.humidity),\r\n            setpressure(result.main.pressure),\r\n            setmaxtemp(result.main.temp_max),\r\n            setmintemp(result.main.temp_min),\r\n            setcity(result.name),\r\n            setcountry(result.sys.country),\r\n            setmain(result.weather[0].main),\r\n            console.log(result))\r\n          }\r\n        </>\r\n      ));\r\n  }\r\n\r\n  const Handle = (e) => {\r\n    setweather(e.target.value);\r\n  };\r\n  return (\r\n    <div className=\"cityDetails\">\r\n      <div>\r\n        <div className=\"cityText\">\r\n          <span style={{ fontSize: 20 }}>Enter Your City:</span>\r\n          <input type=\"text\" onChange={Handle} value={weather} />\r\n          <button\r\n            onClick={() => {\r\n              callweather();\r\n            }}\r\n          >\r\n            Enter\r\n          </button>\r\n        </div>\r\n        <div className=\"cityDetail\">\r\n          <div className=\"cityTop\">\r\n            {\" \"}\r\n            {city}, {country} | Weather\r\n          </div>\r\n          <div className=\"cityTemp\"> {Math.round(celcius - 273.15)}°C</div>\r\n          <div className=\"cityMain\"> {main}</div>\r\n          <div className=\"cityTime\"> {time} IST</div>\r\n          <div className=\"cityDayNight\">\r\n            <NightsStayIcon />\r\n          </div>\r\n        </div>\r\n        <div className=\"callAtcenter\">\r\n          <br />\r\n          Temperature in Celcius is : {Math.round(celcius - 273.15)}°C <br />\r\n          Pressure : {pressure} <br />\r\n          Humidity is : {humidity}% <br />\r\n          Max Temp is : {Math.round(maxtemp - 273.15)} <br />\r\n          Min Temp is : {Math.round(mintemp - 273.15)} <br />\r\n          City is : {city} <br />\r\n          Country is : {country} <br />\r\n          Main is : {main} <br />\r\n          <br />\r\n          {/* <button\r\n            style={{ position: \"relative\", top: -15 }}\r\n            onClick={() => {\r\n              setcelcius(celcius - 273.15);\r\n            }}\r\n          >\r\n            convert to celcius\r\n          </button> */}\r\n        </div>\r\n      </div>\r\n      <div\r\n        className=\"footer\"\r\n        style={{ color: \"black\", placeContent: \"center\", display: \"grid\" }}\r\n      >\r\n        <Footer />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Weather;\r\n",{"ruleId":"45","replacedBy":"46"},{"ruleId":"47","replacedBy":"48"},{"ruleId":"45","replacedBy":"49"},{"ruleId":"47","replacedBy":"50"},{"ruleId":"45","replacedBy":"51"},{"ruleId":"47","replacedBy":"52"},{"ruleId":"53","severity":1,"message":"54","line":7,"column":10,"nodeType":"55","messageId":"56","endLine":7,"endColumn":14},"no-native-reassign",["57"],"no-negated-in-lhs",["58"],["57"],["58"],["57"],["58"],"no-unused-vars","'temp' is assigned a value but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]